{"ast":null,"code":"var _jsxFileName = \"/Users/davidswatzell/turing_work/rancid-tomatillos/src/Component/App/App.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import MovieCards from '../MovieCard/MovieCards.js';\n// import movieData from '../MockData/mockData.js';\n// import MainMovie from '../MainMovie/MainMovie.js'\n// import SelectedMovie from '../SelectedMovie/SelectedMovie.js';\n\n// function App() {\n//   const [movies] = useState(movieData.movies);\n//   const [selectedMovie, setSelectedMovie] = useState(null);\n//   const [showMainMovie, setShowMainMovie] = useState(true);\n//   const [showMovieCards, setShowMovieCards] = useState(true);\n\n//   const randomIndex = Math.floor(Math.random() * movies.length);\n//   const randomMovie = movies[randomIndex];\n\n//   function handleMovieSelection(id) {\n//     console.log(\"handleMovieSelection called with ID:\", id);\n//     const movie = movies.find(movie => movie.id === id);\n//     console.log(\"Selected movie:\", movie);\n//     setSelectedMovie(movie);\n//     setShowMainMovie(false);\n//     setShowMovieCards(false);\n//   }\n\n//   function handleBackToSelection() {\n//     setSelectedMovie(null);\n//     setShowMainMovie(true);\n//     setShowMovieCards(true);\n//   }\n\n//   console.log(\"Selected movie state:\", selectedMovie);\n\n//   return (\n//     <main className=\"App\">\n//       <h1>Rancid Tomatillos</h1>\n//       {showMainMovie && (\n//         <MainMovie key={randomMovie.id} movie={randomMovie} onClick={() => handleMovieSelection(randomMovie.id)} />\n//       )}\n//       {selectedMovie && <SelectedMovie movie={selectedMovie} onBack={handleBackToSelection} />}\n//       {showMovieCards && (\n//         <div className=\"movie-container\">\n//           {movies.map((movie) => (\n//             <MovieCards\n//               key={movie.id}\n//               movie={movie}\n//               onClick={() => handleMovieSelection(movie.id)}\n//             />\n//           ))}\n//         </div>\n//       )}\n//     </main>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport MovieCards from '../MovieCard/MovieCards.js';\nimport MainMovie from '../MainMovie/MainMovie.js';\nimport SelectedMovie from '../SelectedMovie/SelectedMovie.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [showMainMovie, setShowMainMovie] = useState(true);\n  const [showMovieCards, setShowMovieCards] = useState(true);\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies');\n      const data = await response.json();\n      setMovies(data.movies);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n  const handleMovieSelection = async id => {\n    try {\n      const response = await fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`);\n      const data = await response.json();\n      setSelectedMovie(data.movie);\n      setShowMainMovie(false);\n      setShowMovieCards(false);\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n    }\n  };\n  const handleBackToSelection = () => {\n    setSelectedMovie(null);\n    setShowMainMovie(true);\n    setShowMovieCards(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rancid Tomatillos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), showMainMovie && /*#__PURE__*/_jsxDEV(MainMovie, {\n      movie: movies[0],\n      onClick: () => handleMovieSelection(movies[0].id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(SelectedMovie, {\n      movie: selectedMovie,\n      onBack: handleBackToSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }, this), showMovieCards && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCards, {\n        movie: movie,\n        onClick: () => handleMovieSelection(movie.id)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"b76CbvtlaaJA6aY8vnQQ3LewAFg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MovieCards","MainMovie","SelectedMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","selectedMovie","setSelectedMovie","showMainMovie","setShowMainMovie","showMovieCards","setShowMovieCards","fetchMovies","response","fetch","data","json","error","console","handleMovieSelection","id","movie","handleBackToSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onBack","map","_c","$RefreshReg$"],"sources":["/Users/davidswatzell/turing_work/rancid-tomatillos/src/Component/App/App.js"],"sourcesContent":["// import { useState } from 'react';\n// import MovieCards from '../MovieCard/MovieCards.js';\n// import movieData from '../MockData/mockData.js';\n// import MainMovie from '../MainMovie/MainMovie.js'\n// import SelectedMovie from '../SelectedMovie/SelectedMovie.js';\n\n// function App() {\n//   const [movies] = useState(movieData.movies);\n//   const [selectedMovie, setSelectedMovie] = useState(null);\n//   const [showMainMovie, setShowMainMovie] = useState(true);\n//   const [showMovieCards, setShowMovieCards] = useState(true);\n\n//   const randomIndex = Math.floor(Math.random() * movies.length);\n//   const randomMovie = movies[randomIndex];\n    \n//   function handleMovieSelection(id) {\n//     console.log(\"handleMovieSelection called with ID:\", id);\n//     const movie = movies.find(movie => movie.id === id);\n//     console.log(\"Selected movie:\", movie);\n//     setSelectedMovie(movie);\n//     setShowMainMovie(false);\n//     setShowMovieCards(false);\n//   }\n\n//   function handleBackToSelection() {\n//     setSelectedMovie(null);\n//     setShowMainMovie(true);\n//     setShowMovieCards(true);\n//   }\n\n//   console.log(\"Selected movie state:\", selectedMovie);\n\n//   return (\n//     <main className=\"App\">\n//       <h1>Rancid Tomatillos</h1>\n//       {showMainMovie && (\n//         <MainMovie key={randomMovie.id} movie={randomMovie} onClick={() => handleMovieSelection(randomMovie.id)} />\n//       )}\n//       {selectedMovie && <SelectedMovie movie={selectedMovie} onBack={handleBackToSelection} />}\n//       {showMovieCards && (\n//         <div className=\"movie-container\">\n//           {movies.map((movie) => (\n//             <MovieCards\n//               key={movie.id}\n//               movie={movie}\n//               onClick={() => handleMovieSelection(movie.id)}\n//             />\n//           ))}\n//         </div>\n//       )}\n//     </main>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport MovieCards from '../MovieCard/MovieCards.js';\nimport MainMovie from '../MainMovie/MainMovie.js'\nimport SelectedMovie from '../SelectedMovie/SelectedMovie.js';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [showMainMovie, setShowMainMovie] = useState(true);\n  const [showMovieCards, setShowMovieCards] = useState(true);\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies');\n      const data = await response.json();\n      setMovies(data.movies);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n\n  const handleMovieSelection = async (id) => {\n    try {\n      const response = await fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`);\n      const data = await response.json();\n      setSelectedMovie(data.movie);\n      setShowMainMovie(false);\n      setShowMovieCards(false);\n    } catch (error) {\n      console.error('Error fetching movie details:', error);\n    }\n  };\n\n  const handleBackToSelection = () => {\n    setSelectedMovie(null);\n    setShowMainMovie(true);\n    setShowMovieCards(true);\n  };\n\n  return (\n    <main className=\"App\">\n      <h1>Rancid Tomatillos</h1>\n      {showMainMovie && <MainMovie movie={movies[0]} onClick={() => handleMovieSelection(movies[0].id)} />}\n      {selectedMovie && <SelectedMovie movie={selectedMovie} onBack={handleBackToSelection} />}\n      {showMovieCards && (\n        <div className=\"movie-container\">\n          {movies.map((movie) => (\n            <MovieCards\n              key={movie.id}\n              movie={movie}\n              onClick={() => handleMovieSelection(movie.id)}\n            />\n          ))}\n        </div>\n      )}\n    </main>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}