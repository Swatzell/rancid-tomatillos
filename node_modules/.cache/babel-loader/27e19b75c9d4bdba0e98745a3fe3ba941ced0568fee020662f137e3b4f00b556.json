{"ast":null,"code":"var _jsxFileName = \"/Users/lydiasims/2401/Mod3/Projects/rancid-tomatillos/src/Component/App/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n//import MovieCard from '../MovieCard/MovieCards.js';\nimport MainMovie from '../MainMovie/MainMovie.js';\nimport SelectedMovie from '../SelectedMovie/SelectedMovie.js';\nimport { Route, Routes } from 'react-router-dom';\nimport MovieList from '../MovieList/MovieList.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [showMainMovie, setShowMainMovie] = useState(true);\n  const [showMovieCards, setShowMovieCards] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies');\n      if (!response.ok) {\n        throw new Error('Failed to fetch movies');\n      }\n      const data = await response.json();\n      setMovies(data.movies);\n    } catch (error) {\n      setError(error);\n    }\n  };\n  const handleMovieSelection = async id => {\n    try {\n      const response = await fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch movie details');\n      }\n      const data = await response.json();\n      setSelectedMovie(data.movie);\n      setShowMainMovie(false);\n      setShowMovieCards(false);\n    } catch (error) {\n      setError(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rancid Tomatillos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Error: Failed to fetch data. Please try again later.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 23\n          }, this), showMainMovie && movies.length > 0 && /*#__PURE__*/_jsxDEV(MainMovie, {\n            movie: movies[0],\n            onClick: () => handleMovieSelection(movies[0].id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 52\n          }, this), selectedMovie && /*#__PURE__*/_jsxDEV(SelectedMovie, {\n            movie: selectedMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 31\n          }, this), showMovieCards && /*#__PURE__*/_jsxDEV(MovieList, {\n            movies: movies,\n            selectedMovie: handleMovieSelection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/movies/:movieID\",\n        element: /*#__PURE__*/_jsxDEV(SelectedMovie, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xAfvNgzrbe7oYHV06vMUVNOzeu8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","MainMovie","SelectedMovie","Route","Routes","MovieList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","movies","setMovies","selectedMovie","setSelectedMovie","showMainMovie","setShowMainMovie","showMovieCards","setShowMovieCards","error","setError","fetchMovies","response","fetch","ok","Error","data","json","handleMovieSelection","id","movie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","length","onClick","_c","$RefreshReg$"],"sources":["/Users/lydiasims/2401/Mod3/Projects/rancid-tomatillos/src/Component/App/App.js"],"sourcesContent":["import { useEffect,useState } from 'react';\n//import MovieCard from '../MovieCard/MovieCards.js';\nimport MainMovie from '../MainMovie/MainMovie.js'\nimport SelectedMovie from '../SelectedMovie/SelectedMovie.js';\nimport { Route, Routes } from 'react-router-dom';\nimport MovieList from '../MovieList/MovieList.js';\n\nfunction App() {\n  const [movies,setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [showMainMovie, setShowMainMovie] = useState(true);\n  const [showMovieCards, setShowMovieCards] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies');\n      if (!response.ok) {\n        throw new Error('Failed to fetch movies');\n      }\n      const data = await response.json();\n      setMovies(data.movies);\n    } catch (error) {\n      setError(error);\n    }\n  };\n    \n  const handleMovieSelection = async (id) => {\n    try {\n      const response = await fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch movie details');\n      }\n      const data = await response.json();\n      setSelectedMovie(data.movie);\n      setShowMainMovie(false);\n      setShowMovieCards(false);\n    } catch (error) {\n      setError(error);\n    }\n  };  \n \n  return (\n    <main className=\"App\">\n      <h1>Rancid Tomatillos</h1>\n      <Routes>\n        <Route\n          path='/'\n          element = {\n            <>\n            {error && <div>Error: Failed to fetch data. Please try again later.</div>}\n            {showMainMovie && movies.length > 0 && <MainMovie movie={movies[0]} onClick={() => handleMovieSelection(movies[0].id)} />}\n            {selectedMovie && <SelectedMovie movie={selectedMovie} />}\n            {showMovieCards && <MovieList movies={movies} selectedMovie={handleMovieSelection} />}\n            </>\n          }\n        />\n        <Route path='/movies/:movieID' element = {<SelectedMovie />} />\n      </Routes>\n    </main>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}