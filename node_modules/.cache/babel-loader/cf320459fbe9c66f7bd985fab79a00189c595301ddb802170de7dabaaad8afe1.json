{"ast":null,"code":"var _jsxFileName = \"/Users/lydiasims/2401/Mod3/Projects/rancid-tomatillos/src/Component/App/App.js\",\n  _s = $RefreshSig$();\nimport { Route, Routes } from 'react-router-dom';\nimport MainPage from '../MainPage/MainPage';\nimport SelectedMovie from '../SelectedMovie/SelectedMovie';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies');\n      if (!response.ok) {\n        throw new Error('Failed to fetch movies');\n      }\n      const data = await response.json();\n      setMovies(data.movies);\n    } catch (error) {\n      setError(true);\n    }\n  };\n  const handleMovieSelection = async id => {\n    try {\n      const response = await fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch movie details');\n      }\n      const data = await response.json();\n      setSelectedMovie(data.movie);\n    } catch (error) {\n      setError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rancid Tomatillos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Failed to fetch data. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(MainPage, {\n          movies: movies,\n          handleMovieSelection: handleMovieSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/movies/:movieID\",\n        element: /*#__PURE__*/_jsxDEV(SelectedMovie, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eYUQWmx3jDcvH5URX/YY9UVRN2s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","MainPage","SelectedMovie","useEffect","useState","jsxDEV","_jsxDEV","App","_s","movies","setMovies","error","setError","fetchMovies","response","fetch","ok","Error","data","json","handleMovieSelection","id","setSelectedMovie","movie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/lydiasims/2401/Mod3/Projects/rancid-tomatillos/src/Component/App/App.js"],"sourcesContent":["import { Route, Routes } from 'react-router-dom';\nimport MainPage from '../MainPage/MainPage';\nimport SelectedMovie from '../SelectedMovie/SelectedMovie';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  \n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies');\n      if (!response.ok) {\n        throw new Error('Failed to fetch movies');\n      }\n      const data = await response.json();\n      setMovies(data.movies);\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  const handleMovieSelection = async (id) => {\n    try {\n      const response = await fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch movie details');\n      }\n      const data = await response.json();\n      setSelectedMovie(data.movie);\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  return (\n    <main className=\"App\">\n      <h1>Rancid Tomatillos</h1>\n      {error && <div>Error: Failed to fetch data. Please try again later.</div>}\n      <Routes>\n        <Route path=\"/\" element={<MainPage movies={movies} handleMovieSelection={handleMovieSelection} />} />\n        <Route path=\"/movies/:movieID\" element={<SelectedMovie />} />\n      </Routes>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAGzCD,SAAS,CAAC,MAAM;IACdU,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,CAAC;MACrF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCT,SAAS,CAACQ,IAAI,CAACT,MAAM,CAAC;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC;EAED,MAAMQ,oBAAoB,GAAG,MAAOC,EAAE,IAAK;IACzC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,yDAAwDM,EAAG,EAAC,CAAC;MAC3F,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;MAClD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCG,gBAAgB,CAACJ,IAAI,CAACK,KAAK,CAAC;IAC9B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdC,QAAQ,CAAC,IAAI,CAAC;IAChB;EACF,CAAC;EAED,oBACEN,OAAA;IAAMkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACnBnB,OAAA;MAAAmB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBlB,KAAK,iBAAIL,OAAA;MAAAmB,QAAA,EAAK;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzEvB,OAAA,CAACN,MAAM;MAAAyB,QAAA,gBACLnB,OAAA,CAACP,KAAK;QAAC+B,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEzB,OAAA,CAACL,QAAQ;UAACQ,MAAM,EAAEA,MAAO;UAACW,oBAAoB,EAAEA;QAAqB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrGvB,OAAA,CAACP,KAAK;QAAC+B,IAAI,EAAC,kBAAkB;QAACC,OAAO,eAAEzB,OAAA,CAACJ,aAAa;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAACrB,EAAA,CA7CQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}