{"ast":null,"code":"var _jsxFileName = \"/Users/lydiasims/2401/Mod3/Projects/rancid-tomatillos/src/Component/App/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport MovieCards from '../MovieCard/MovieCards.js';\nimport MainMovie from '../MainMovie/MainMovie.js';\nimport SelectedMovie from '../SelectedMovie/SelectedMovie.js';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [showMainMovie, setShowMainMovie] = useState(true);\n  const [showMovieCards, setShowMovieCards] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies');\n      if (!response.ok) {\n        throw new Error('Failed to fetch movies');\n      }\n      const data = await response.json();\n      setMovies(data.movies);\n    } catch (error) {\n      setError(error);\n    }\n  };\n  const handleMovieSelection = async id => {\n    try {\n      const response = await fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch movie details');\n      }\n      const data = await response.json();\n      setSelectedMovie(data.movie);\n      setShowMainMovie(false);\n      setShowMovieCards(false);\n    } catch (error) {\n      setError(error);\n    }\n  };\n  function handleBackToSelection() {\n    setSelectedMovie(null);\n    setShowMainMovie(true);\n    setShowMovieCards(true);\n  }\n  console.log(\"Selected movie state:\", selectedMovie);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rancid Tomatillos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Error: Failed to fetch data. Please try again later.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), showMainMovie && movies.length > 0 && /*#__PURE__*/_jsxDEV(MainMovie, {\n              movie: movies[0],\n              onClick: () => handleMovieSelection(movies[0].id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 54\n            }, this), selectedMovie && /*#__PURE__*/_jsxDEV(SelectedMovie, {\n              movie: selectedMovie,\n              onBack: handleBackToSelection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), showMovieCards && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-container\",\n              children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCards, {\n                movie: movie,\n                onClick: () => handleMovieSelection(movie.id)\n              }, movie.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:movieID\",\n          element: /*#__PURE__*/_jsxDEV(SelectedMoviePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8MOrcMNmc7BSe+0zf/iaF+RMzRw=\");\n_c = App;\nfunction SelectedMoviePage() {\n  return /*#__PURE__*/_jsxDEV(SelectedMovie, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n}\n_c2 = SelectedMoviePage;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SelectedMoviePage\");","map":{"version":3,"names":["useEffect","useState","MovieCards","MainMovie","SelectedMovie","BrowserRouter","Router","Route","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","movies","setMovies","selectedMovie","setSelectedMovie","showMainMovie","setShowMainMovie","showMovieCards","setShowMovieCards","error","setError","fetchMovies","response","fetch","ok","Error","data","json","handleMovieSelection","id","movie","handleBackToSelection","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","length","onClick","onBack","map","SelectedMoviePage","_c","_c2","$RefreshReg$"],"sources":["/Users/lydiasims/2401/Mod3/Projects/rancid-tomatillos/src/Component/App/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport MovieCards from '../MovieCard/MovieCards.js';\nimport MainMovie from '../MainMovie/MainMovie.js';\nimport SelectedMovie from '../SelectedMovie/SelectedMovie.js';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [showMainMovie, setShowMainMovie] = useState(true);\n  const [showMovieCards, setShowMovieCards] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies');\n      if (!response.ok) {\n        throw new Error('Failed to fetch movies');\n      }\n      const data = await response.json();\n      setMovies(data.movies);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const handleMovieSelection = async (id) => {\n    try {\n      const response = await fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch movie details');\n      }\n      const data = await response.json();\n      setSelectedMovie(data.movie);\n      setShowMainMovie(false);\n      setShowMovieCards(false);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  function handleBackToSelection() {\n    setSelectedMovie(null);\n    setShowMainMovie(true);\n    setShowMovieCards(true);\n  }\n\n  console.log(\"Selected movie state:\", selectedMovie);\n\n  return (\n    <Router>\n      <main className=\"App\">\n        <h1>Rancid Tomatillos</h1>\n        <Routes>\n          <Route\n            path='/'\n            element = {\n              <>\n              {error && <div>Error: Failed to fetch data. Please try again later.</div>}\n              {showMainMovie && movies.length > 0 && <MainMovie movie={movies[0]} onClick={() => handleMovieSelection(movies[0].id)} />}\n              {selectedMovie && <SelectedMovie movie={selectedMovie} onBack={handleBackToSelection} />}\n              {showMovieCards && (\n                <div className=\"movie-container\">\n                  {movies.map((movie) => (\n                    <MovieCards\n                      key={movie.id}\n                      movie={movie}\n                      onClick={() => handleMovieSelection(movie.id)}\n                    />\n                  ))}\n                </div>\n              )}\n              </>\n            }\n          ></Route>\n          <Route path='/:movieID' element = {<SelectedMoviePage />} />\n        </Routes>\n      </main>\n    </Router>\n  );\n}\n\nfunction SelectedMoviePage() {\n  return <SelectedMovie />\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}