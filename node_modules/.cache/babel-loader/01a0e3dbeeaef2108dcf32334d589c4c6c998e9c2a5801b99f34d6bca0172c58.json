{"ast":null,"code":"var _jsxFileName = \"/Users/davidswatzell/turing_work/rancid-tomatillos/src/Component/App/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport MovieCards from '../MovieCard/MovieCards.js';\nimport MainMovie from '../MainMovie/MainMovie.js';\nimport SelectedMovie from '../SelectedMovie/SelectedMovie.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [showMainMovie, setShowMainMovie] = useState(true);\n  const [showMovieCards, setShowMovieCards] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies');\n      if (!response.ok) {\n        throw new Error('Failed to fetch movies');\n      }\n      const data = await response.json();\n      setMovies(data.movies);\n    } catch (error) {\n      setError(true);\n    }\n  };\n  function handleMovieSelection(id) {\n    console.log(\"handleMovieSelection called with ID:\", id);\n    const movie = movies.find(movie => movie.id === id);\n    console.log(\"Selected movie:\", movie);\n    setSelectedMovie(movie);\n    setShowMainMovie(false);\n    setShowMovieCards(false);\n  }\n  function handleBackToSelection() {\n    setSelectedMovie(null);\n    setShowMainMovie(true);\n    setShowMovieCards(true);\n  }\n  console.log(\"Selected movie state:\", selectedMovie);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rancid Tomatillos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), showMainMovie && /*#__PURE__*/_jsxDEV(MainMovie, {\n      movie: randomMovie,\n      onClick: () => handleMovieSelection(randomMovie.id)\n    }, randomMovie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(SelectedMovie, {\n      movie: selectedMovie,\n      onBack: handleBackToSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this), showMovieCards && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCards, {\n        movie: movie,\n        onClick: () => handleMovieSelection(movie.id)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xAfvNgzrbe7oYHV06vMUVNOzeu8=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","MovieCards","MainMovie","SelectedMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","selectedMovie","setSelectedMovie","showMainMovie","setShowMainMovie","showMovieCards","setShowMovieCards","error","setError","useEffect","fetchMovies","response","fetch","ok","Error","data","json","handleMovieSelection","id","console","log","movie","find","handleBackToSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","randomMovie","onClick","onBack","map","_c","$RefreshReg$"],"sources":["/Users/davidswatzell/turing_work/rancid-tomatillos/src/Component/App/App.js"],"sourcesContent":["import { useState } from 'react';\nimport MovieCards from '../MovieCard/MovieCards.js';\nimport MainMovie from '../MainMovie/MainMovie.js'\nimport SelectedMovie from '../SelectedMovie/SelectedMovie.js';\n\nfunction App() {\n  const [movies,setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [showMainMovie, setShowMainMovie] = useState(true);\n  const [showMovieCards, setShowMovieCards] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies');\n      if (!response.ok) {\n        throw new Error('Failed to fetch movies');\n      }\n      const data = await response.json();\n      setMovies(data.movies);\n    } catch (error) {\n      setError(true);\n    }\n  };\n    \n  function handleMovieSelection(id) {\n    console.log(\"handleMovieSelection called with ID:\", id);\n    const movie = movies.find(movie => movie.id === id);\n    console.log(\"Selected movie:\", movie);\n    setSelectedMovie(movie);\n    setShowMainMovie(false);\n    setShowMovieCards(false);\n  }\n\n  function handleBackToSelection() {\n    setSelectedMovie(null);\n    setShowMainMovie(true);\n    setShowMovieCards(true);\n  }\n\n  console.log(\"Selected movie state:\", selectedMovie);\n\n  return (\n    <main className=\"App\">\n      <h1>Rancid Tomatillos</h1>\n      {showMainMovie && (\n        <MainMovie key={randomMovie.id} movie={randomMovie} onClick={() => handleMovieSelection(randomMovie.id)} />\n      )}\n      {selectedMovie && <SelectedMovie movie={selectedMovie} onBack={handleBackToSelection} />}\n      {showMovieCards && (\n        <div className=\"movie-container\">\n          {movies.map((movie) => (\n            <MovieCards\n              key={movie.id}\n              movie={movie}\n              onClick={() => handleMovieSelection(movie.id)}\n            />\n          ))}\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}